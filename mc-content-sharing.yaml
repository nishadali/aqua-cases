AWSTemplateFormatVersion: 2010-09-09
Description: ECS service and task configuration
Parameters:
  BalancerStackName:
    Type: String
    Description: Insert the name of the Balancer StackName
  VPC:
    Type: String
    Description: Insert the VPC ID
  ECSStackName:
    Type: String
    Description: Insert the name of the ECS StackName
  ContainerName:
    Type: String
    Description: Docker container name
  ContainerPort:
    Type: String
    Description: Docker container port
  ContainerImage:
    Type: String
    Description: Docker container image
  ContainerMemory:
    Type: String
    Description: Docker container MemoryReservation
  ContainerMaxMemory:
    Type: String
    Description: Docker container Memory
  ContainerLogGroup:
    Type: String
    Description: Docker container Log group name
  ContainerLogPrefix:
    Type: String
    Description: Docker container Log group prefix
  TaskName:
    Type: String
    Description: ECS task name
  ServiceName:
    Type: String
    Description: ECS service name
  DsrrInQueueKms:
    Type: String
    Description: ARN of kms to assign to GDPR input queue
  DsrrInQueueName:
    Type: String
    Description: Name of GDPR input queue
  MessageInQueueKms:
    Type: String
    Description: ARN of kms to assign to input message queue
  MessageInQueueName:
    Type: String
    Description: Name of input message queue
  SecretManagerKeyARN:
    Type: String
    Description: Secret Manager Key ARNs
  LoadBalancerListenerRulePath:
    Type: String
    Description: Type a path for the ListenerRule
  HealthCheckPathReq:
    Type: String
    Description: Insert path with healthcheck Resource
  HttpCode:
    Type: Number
    Description: Insert answer code for healthcheck Resource
  BU:
    Type: String
    Description: Specify the BU tag for the instance runned by ASG
  CC:
    Type: String
    Description: Specify the CC tag for the instance runned by ASG
  Environment:
    Type: String
    Description: Specify the Environment tag for the instance runned by ASG
  MinNumberContainers:
    Type: String
    Description: Insert the number of minimum container
  DesiredNumberContainers:
    Type: String
    Description: Insert the number of desidered container
  MaxNumberContainers:
    Type: String
    Description: Insert the number of maximum container
  BucketName:
    Type: String
    Description: 'Arn of bucket which cotain the shared track and marker '
  SqsServiceNameOut:
    Type: String
    Description: Insert the name of sqs for push notification
  SqsDsrrNameOut:
    Type: String
    Description: Insert the name of sqs for output GDPR
  Infrastructure:
    Type: String
    Description: The name of the infrastructure
  TaskMaxCpu:
    Description: Task hard CPU limit
    Type: String
  TaskMaxMemory:
    Description: Task hard Memory limit
    Type: String       
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: General configuration
        Parameters:
          - ECSStackName
          - BalancerStackName
          - VPC
          - LoadBalancerListenerRulePath
      - Label:
          default: ECS configuration
        Parameters:
          - ContainerName
          - ContainerPort
          - ContainerImage
          - ContainerMemory
          - ContainerMaxMemory
          - ContainerLogGroup
          - ContainerLogPrefix
          - HealthCheckPathReq
          - ServiceName
          - TaskName
          - HttpCode
          - NumberContainer
          - MinNumberContainers
          - DesiredNumberContainers
          - MaxNumberContainers
          - SecretManagerKeyARN
          - DsrrInQueueName
          - DsrrInQueueKms
          - MessageInQueueName
          - MessageInQueueKms
          - BucketName
          - CC
          - BU
          - Env

Conditions:
  EnvIsNotProduction: !Not
    - !Equals
      - !Ref Environment
      - 'production'

Resources:

  Service:
    Type: 'AWS::ECS::Service'
    Properties:
      Cluster: !ImportValue 
        'Fn::Sub': '${ECSStackName}-ecs-cluster-name'
      LoadBalancers:
        - ContainerName: !Ref ContainerName
          ContainerPort: !Ref ContainerPort
          TargetGroupArn: !Ref TargetGroup
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      DesiredCount: !Ref DesiredNumberContainers
      ServiceName: !Ref ServiceName
      HealthCheckGracePeriodSeconds: 240
      TaskDefinition: !Ref Task
      PlacementStrategies:
        - Field: 'attribute:ecs.availability-zone'
          Type: spread
      Tags:
        - Key: Name
          Value: !Ref ServiceName
        - Key: BU
          Value: !Ref BU
        - Key: CC
          Value: !Ref CC
        - Key: Environment
          Value: !Ref Environment

  ListenerRule:
    Type: 'AWS::ElasticLoadBalancingV2::ListenerRule'
    Properties:
      Actions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward
      Conditions:
        - Field: path-pattern
          Values:
            - !Ref LoadBalancerListenerRulePath
      ListenerArn: !ImportValue 
        'Fn::Sub': '${BalancerStackName}-ArnALBListnerHTTPS'
      Priority: 90

  Task:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      Family: !Ref TaskName
      Memory: !Ref TaskMaxMemory
      Cpu: !Ref TaskMaxCpu         
      ContainerDefinitions:
        - Name: !Ref ContainerName
          Essential: true
          Image: !Join 
            - ''
            - - !Ref ContainerImage
          Memory: !Ref ContainerMaxMemory
          MemoryReservation: !Ref ContainerMemory
          Cpu: 0
          Environment:
            - Name: ENVIRONMENT
              Value: !Ref Environment
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ContainerLogGroup
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: !Ref ContainerLogPrefix
          PortMappings:
            - HostPort: 0
              ContainerPort: !Ref ContainerPort
          RepositoryCredentials:
            CredentialsParameter: 
              Fn::ImportValue: !Sub secret-dockerhub-prodv2           
      TaskRoleArn: !Ref TaskRole
      ExecutionRoleArn: !Ref TaskRole
      Tags:
        - Key: Name
          Value: !Ref TaskName
        - Key: BU
          Value: !Ref BU
        - Key: CC
          Value: !Ref CC
        - Key: Environment
          Value: !Ref Environment

  DsrrInServiceQueue:
    Type: 'AWS::SQS::Queue'
    Properties:
      KmsDataKeyReusePeriodSeconds: 86400
      KmsMasterKeyId: !Ref DsrrInQueueKms
      MessageRetentionPeriod: 345600
      QueueName: !Ref DsrrInQueueName
      ReceiveMessageWaitTimeSeconds: 2
      Tags:
        - Key: Name
          Value: !Ref TaskName
        - Key: BU
          Value: !Ref BU
        - Key: CC
          Value: !Ref CC
        - Key: Environment
          Value: !Ref Environment
      VisibilityTimeout: 10

  MessageInServiceQueue:
    Type: 'AWS::SQS::Queue'
    Properties:
      KmsDataKeyReusePeriodSeconds: 86400
      KmsMasterKeyId: !Ref MessageInQueueKms
      MessageRetentionPeriod: 345600
      QueueName: !Ref MessageInQueueName
      ReceiveMessageWaitTimeSeconds: 2
      Tags:
        - Key: Name
          Value: !Ref TaskName
        - Key: BU
          Value: !Ref BU
        - Key: CC
          Value: !Ref CC
        - Key: Environment
          Value: !Ref Environment
      VisibilityTimeout: 10

  LogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Ref ContainerLogGroup
      RetentionInDays: '30'

  TargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: !Ref HealthCheckPathReq
      Matcher:
        HttpCode: !Ref HttpCode
      HealthCheckPort: traffic-port
      HealthCheckProtocol: HTTPS
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      Name: !Join 
        - '-'
        - - !Ref 'AWS::StackName'
          - tg
      Port: !Ref ContainerPort
      Protocol: HTTPS
      UnhealthyThresholdCount: 3
      TargetType: instance
      VpcId: !Ref VPC
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 60
      Tags:
        - Key: Name
          Value: !Join 
            - '-'
            - - !Ref 'AWS::StackName'
              - tg
        - Key: BU
          Value: !Ref BU
        - Key: CC
          Value: !Ref CC
        - Key: Environment
          Value: !Ref Environment

  TaskRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:        
        - !Ref ManagedPolicy   

  ManagedPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      Description: 'Managed policy created by CFN - do not change'
      #ManagedPolicyName: !Sub "${AWS::StackName}-managed-policy1"
      PolicyDocument:
        Version: '2012-10-17'
        Statement: 
          - Sid: IamPassRole
            Action:
              - 'iam:PassRole'
            Resource: '*'
            Effect: Allow
            Condition:
              StringLike:
                iam:PassedToService: ecs-tasks.amazonaws.com

          - Sid: LogGroup
            Action:
              - 'logs:DescribeLogStreams'
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
            Resource: !GetAtt [LogGroup, Arn] #This resource would be placed into Extra stack
            Effect: Allow

          - Sid: kms
            Action:
              - 'secretsmanager:GetSecretValue'
              - 'kms:Decrypt'
              - 'kms:GenerateDataKey'
            Resource: !Split 
              - '|'
              - !Ref SecretManagerKeyARN
            Effect: Allow

          - Sid: DockerSecret
            Action:
              - 'secretsmanager:GetSecretValue'
              - 'kms:Decrypt'
              - 'kms:GenerateDataKey'
            Resource:
              - Fn::ImportValue: !Sub secret-dockerhub-prodv2
            Effect: Allow

          - Sid: S3ListPermission
            Action: 'secretsmanager:ListSecrets'
            Resource: '*'
            Effect: Allow

          - Sid: S3SpecificPermission
            Action:
              - 's3:DeleteObject'
              - 's3:PutObject'
              - 's3:GetObject'
              - 's3:DeleteObjectVersion'
              - 's3:GetBucketLogging'
              - 's3:ListBucketVersions'
              - 's3:RestoreObject'
              - 's3:ListBucket'
              - 's3:GetObjectTagging'
              - 's3:GetObjectVersion'
              - 's3:ListMultipartUploadParts'
              - 's3:AbortMultipartUpload'
            Resource:
              - !Sub 'arn:aws:s3:::${BucketName}'
              - !Sub 'arn:aws:s3:::${BucketName}/*'
            Effect: Allow

          - Sid: SqsSendPermission1
            Action:
              - 'SQS:GetQueueUrl'
              - 'SQS:GetQueueAttributes'
              - 'SQS:SendMessage'
            Effect: Allow
            Resource: !Join 
              - ':'
              - - 'arn:aws:sqs:us-east-1:935209717847'
                - !Ref SqsServiceNameOut
    
          - Sid: SqsReceivePermission1
            Action:
              - 'SQS:GetQueueUrl'
              - 'SQS:GetQueueAttributes'
              - 'SQS:ReceiveMessage'
              - 'SQS:ChangeMessageVisibility'
              - 'SQS:Deletemessage'
            Effect: Allow
            Resource: !GetAtt 
              - DsrrInServiceQueue
              - Arn
    
          - Sid: SqsReceivePermission2 
            Action:
              - 'SQS:GetQueueUrl'
              - 'SQS:GetQueueAttributes'
              - 'SQS:ReceiveMessage'
              - 'SQS:ChangeMessageVisibility'
              - 'SQS:Deletemessage'
            Effect: Allow
            Resource: !GetAtt 
              - MessageInServiceQueue
              - Arn

          - Sid: SqsSendPermission2
            Action:
              - 'SQS:GetQueueUrl'
              - 'SQS:GetQueueAttributes'
              - 'SQS:SendMessage'
            Effect: Allow
            Resource: !Join 
              - ':'
              - - 'arn:aws:sqs:us-east-1:935209717847'
                - !Ref SqsDsrrNameOut

  DevelopersGroup:  
    Type: AWS::IAM::Group
    Condition: EnvIsNotProduction
    Properties: 
      GroupName: !Sub 'developers-${AWS::StackName}'
      Path: /
      ManagedPolicyArns: 
        - !Ref ManagedPolicy

  IamUserDev:
    Type: AWS::IAM::User
    Condition: EnvIsNotProduction
    Properties: 
      Groups: 
        - !Ref DevelopersGroup
      Tags:
        - Key: BU
          Value: !Ref BU
        - Key: CC
          Value: !Ref CC
        - Key: Environment
          Value: !Ref Environment
        
      UserName: !Sub '${Infrastructure}-${Environment}-dev'

  ScalableTarget:
    Type: 'AWS::ApplicationAutoScaling::ScalableTarget'
    DependsOn: Service
    Properties:
      ServiceNamespace: ecs
      ScalableDimension: 'ecs:service:DesiredCount'
      ResourceId: !Join 
        - /
        - - service
          - !ImportValue 
            'Fn::Sub': '${ECSStackName}-ecs-cluster-name'
          - !Ref ServiceName
      MinCapacity: !Ref MinNumberContainers
      MaxCapacity: !Ref MaxNumberContainers
      RoleARN: 'arn:aws:iam::935209717847:role/ecsAutoscaleRole'

  ScaleDownPolicy:
    Type: 'AWS::ApplicationAutoScaling::ScalingPolicy'
    DependsOn: ScalableTarget
    Properties:
      PolicyName: !Join 
        - /
        - - scale
          - !Ref Environment
          - !Ref ServiceName
          - down
      PolicyType: StepScaling
      ResourceId: !Join 
        - /
        - - service
          - !ImportValue 
            'Fn::Sub': '${ECSStackName}-ecs-cluster-name'
          - !Ref ServiceName
      ScalableDimension: 'ecs:service:DesiredCount'
      ServiceNamespace: ecs
      StepScalingPolicyConfiguration:
        AdjustmentType: ChangeInCapacity
        StepAdjustments:
          - MetricIntervalUpperBound: 0
            ScalingAdjustment: -1
        MetricAggregationType: Average
        Cooldown: 60

  ScaleUpPolicy:
    Type: 'AWS::ApplicationAutoScaling::ScalingPolicy'
    DependsOn: ScalableTarget
    Properties:
      PolicyName: !Join 
        - /
        - - scale
          - !Ref Environment
          - !Ref ServiceName
          - up
      PolicyType: StepScaling
      ResourceId: !Join 
        - /
        - - service
          - !ImportValue 
            'Fn::Sub': '${ECSStackName}-ecs-cluster-name'
          - !Ref ServiceName
      ScalableDimension: 'ecs:service:DesiredCount'
      ServiceNamespace: ecs
      StepScalingPolicyConfiguration:
        AdjustmentType: ChangeInCapacity
        StepAdjustments:
          - MetricIntervalLowerBound: 0
            MetricIntervalUpperBound: 300
            ScalingAdjustment: 1
          - MetricIntervalLowerBound: 300
            ScalingAdjustment: 2
        MetricAggregationType: Average
        Cooldown: 240

  LowRequestsAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmName: !Join 
        - '-'
        - - !Ref ServiceName
          - !Ref Environment
          - low-request
      AlarmDescription: !Join 
        - ' '
        - - Low number of requests for each target
          - !Ref ServiceName
          - in environment
          - !Ref Environment
      MetricName: RequestCountPerTarget
      Namespace: AWS/ApplicationELB
      Dimensions:
        - Name: TargetGroup
          Value: !GetAtt 
            - TargetGroup
            - TargetGroupFullName
        - Name: LoadBalancer
          Value: !ImportValue 
            'Fn::Sub': '${BalancerStackName}-FullNameApplicationBalancer'
      Statistic: SampleCount
      Period: 60
      EvaluationPeriods: 2
      Threshold: 25
      ComparisonOperator: LessThanOrEqualToThreshold
      AlarmActions:
        - !Ref ScaleDownPolicy

  HighRequestsAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmName: !Join 
        - '-'
        - - !Ref ServiceName
          - !Ref Environment
          - high-requests
      AlarmDescription: !Join 
        - ' '
        - - High number of requests for each target
          - !Ref ServiceName
          - in environment
          - !Ref Environment
      MetricName: RequestCountPerTarget
      Namespace: AWS/ApplicationELB
      Dimensions:
        - Name: TargetGroup
          Value: !GetAtt 
            - TargetGroup
            - TargetGroupFullName
        - Name: LoadBalancer
          Value: !ImportValue 
            'Fn::Sub': '${BalancerStackName}-FullNameApplicationBalancer'
      Statistic: SampleCount
      Period: 60
      EvaluationPeriods: 1
      Threshold: 600
      ComparisonOperator: GreaterThanOrEqualToThreshold
      AlarmActions:
        - !Ref ScaleUpPolicy

  CriticalLatencyAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmName: !Join 
        - '-'
        - - !Ref ServiceName
          - !Ref Environment
          - critical-latency
      AlarmDescription: !Join 
        - ' '
        - - High LATENCY provided for service
          - !Ref ServiceName
          - in environment
          - !Ref Environment
      MetricName: TargetResponseTime
      Namespace: AWS/ApplicationELB
      Dimensions:
        - Name: TargetGroup
          Value: !GetAtt 
            - TargetGroup
            - TargetGroupFullName
        - Name: LoadBalancer
          Value: !ImportValue 
            'Fn::Sub': '${BalancerStackName}-FullNameApplicationBalancer'
      Statistic: Average
      Period: 60
      EvaluationPeriods: 5
      Threshold: 10
      ComparisonOperator: GreaterThanOrEqualToThreshold
      AlarmActions:
        - 'arn:aws:sns:us-east-1:935209717847:alert-cloud'
